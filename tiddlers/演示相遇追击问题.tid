created: 20230617034537615
modified: 20230617034624132
tags: 
title: 演示相遇追击问题
tmap.id: 54a338d5-fb2f-46cc-a7ea-7a7cd790f5b9


演示相遇追击问题
<<codes src:"""
import matplotlib.pyplot as plt
import numpy as np
from matplotlib.animation import FuncAnimation

# 初始化参数
a = 1  # 小球 B 的加速度为 1m/s^2
v_a = 5  # 小球 A 的速度为 5m/s
s_b_0 = 5  # 小球 B 的初始位移为 5m

# 创建画布和子图对象
fig, ax = plt.subplots()

# 绘制小球 A 的初始点
s_a_0 = 0
s_a_text = ax.text(0, s_a_0-0.5, 'A', ha='center', fontsize=12, color='r')

# 绘制小球 B 的初始点
s_b_0_x = 5
s_b_0_y = s_b_0
s_b_text = ax.text(s_b_0_x, s_b_0_y-0.5, 'B', ha='center', fontsize=12, color='b')

# 创建小球 A 和小球 B 的轨迹线对象
line_a, = ax.plot([], [], 'r')
line_b, = ax.plot([], [], 'b')

# 设置坐标系范围和标签
ax.set_xlim([0, 10])
ax.set_ylim([0, 50])
ax.set_xlabel('time (s)')
ax.set_ylabel('position (m)')

# 计算小球 A 和小球 B 的位置
t = np.linspace(0, 10, 100)  # 模拟时间范围为 0 到 10 秒，分成 100 个时间点
s_a = v_a * t
s_b = s_b_0 + 0.5 * a * t**2

# 动画函数，每次更新小球的位置和轨迹线
def update(i):
    s_a_i = s_a[i]
    s_b_i = s_b[i]
    line_a.set_data(t[:i+1], s_a[:i+1])
    line_b.set_data(t[:i+1], s_b[:i+1])
    s_a_text.set_position([t[i], s_a_i-0.5])
    s_b_text.set_position([t[i], s_b_i-0.5])
    return line_a, line_b, s_a_text, s_b_text

# 创建动画对象
ani = FuncAnimation(fig, update, frames=100, interval=100)

# 显示动画
plt.show()

""">>